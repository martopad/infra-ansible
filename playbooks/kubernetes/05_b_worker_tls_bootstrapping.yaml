# Example of what could have been. Maybe in the future. But bootstrapping requirements for kubernetes.core.k8s
# is not easy. Mainly due to dev-python/kubernetes being amd64 only. I can make my ebuild but not now.
# For now, transfer yaml files to control plane and then call kubectl command line.
#    - name: Create a Service object from an inline definition
#      run_once: true
#      kubernetes.core.k8s:
#        state: present
#        definition:
#          apiVersion: v1
#          kind: Secret
#          metadata:
#            name: "bootstrap-token-{{ iid_k8s_tls_bootstrapping.token_id }}"
#            namespace: kube-system
#          type: bootstrap.kubernetes.io/token
#          stringData:
#            description: "The default bootstrap token generated by 'kubeadm init'."
#            token-id: "{{ iid_k8s_tls_bootstrapping.token_id }}"
#            token-secret: "{{ iid_k8s_tls_bootstrapping.token_secret }}"
#            # expiration: sample format: 2024-07-26T16:06:52Z
#            usage-bootstrap-authentication: "true"
#            usage-bootstrap-signing: "true"
#            auth-extra-groups: system:bootstrappers:worker

# run_once: true is required here since it only needs to be applied once from a control_plane to apply to whole cluster.
- hosts: kubernetes_control_plane
  vars:
    op_dir: /root/tls_bootstrap
  tasks:
    - name: Create folder for yaml configs for easier cleanup
      run_once: true
      ansible.builtin.file:
        path: "{{ op_dir }}"
        state: directory
    - name: fill and transfer templated configs
      run_once: true
      ansible.builtin.template:
        src: "{{ item.file }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { file: "{{ playbook_dir }}/../../config/templates/root/root/bootstrap-token.yaml.j2", dest: "{{ op_dir }}/bootstrap-token.yaml" }
    - name: transfer static configs
      run_once: true
      ansible.builtin.template:
        src: "{{ item.file }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: '0644'
      loop:
        - { file: "{{ playbook_dir }}/../../config/static/root/root/csrs-for-bootstrapping.yaml", dest: "{{ op_dir }}/csrs-for-bootstrapping.yaml" }
        - { file: "{{ playbook_dir }}/../../config/static/root/root/auto-approve-csrs-for-group.yaml", dest: "{{ op_dir }}/auto-approve-csrs-for-group.yaml" }
        - { file: "{{ playbook_dir }}/../../config/static/root/root/auto-approve-renewals-for-nodes.yaml", dest: "{{ op_dir }}/auto-approve-renewals-for-nodes.yaml" }
    - name: Apply config files
      run_once: true
      ansible.builtin.shell:
        cmd: kubectl create --kubeconfig admin.kubeconfig -f "{{ op_dir }}/{{ item }}"
        chdir: /root
      loop:
        - bootstrap-token.yaml 
        - csrs-for-bootstrapping.yaml
        - auto-approve-csrs-for-group.yaml
        - auto-approve-renewals-for-nodes.yaml

