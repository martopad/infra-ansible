- hosts: kubernetes_control_plane # x86 only due to etcd not being available in arm64 portage
  tasks: 
    # - name: modify /etc/hosts
    #   ansible.builtin.lineinfile:
    #     path: /etc/hosts
    #     state: present
    #     line: "{{ item }}"
    #   loop:
    #     - "# Kubernetes The Hard Way"
    #     - "127.0.1.1 server.kubernetes.local server"
    #       #- "192.168.1.20 server.kubernetes.local server"
    #       #- "192.168.1.21 node-0.kubernetes.local node-0"
    #       #- "192.168.1.22 node-1.kubernetes.local node-1"
    - name: display messages
      debug:
        msg:
          - "{{ item }}"
      loop: "{{ pods_routes | selectattr('node', 'equalto', iid.name) | map(attribute='routes') | flatten }}"
      tags:
        - msg123
    - name: Add accept keywords for kuberenetes packages for aarch64 (raspi5) # WIP
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/../../config/static/root/etc/portage/package.accept_keywords/kubernetes"
        dest: "/etc/portage/package.accept_keywords/kubernetes"
      when:
        - ansible_architecture == "aarch64"
    - name: Installing kubernetes server packages
      community.general.portage:
        package: "{{ item }}"
        getbinpkg: true
      loop:
        - sys-cluster/kubectl
        - sys-cluster/kube-apiserver
        - sys-cluster/kube-controller-manager
        - sys-cluster/kube-scheduler
    - name: enable kubernetes server services
      ansible.builtin.service:
        name: "{{ item }}"
        enabled: yes
        runlevel: default
      loop:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
    - name: Create Dirs
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
      loop:
        - /var/lib/kubernetes
        - /var/lib/kubernetes/pki
        - /etc/kubernetes/config
    - name: Transfer Certs
      ansible.builtin.copy:
        src: "{{ item.file }}" 
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.perm }}"
      loop:
        # TODO: permissions are not correct here
        - { file: "{{ playbook_dir }}/../../config/certs/generated/ca.key", perm: '0666', dest: /etc/etcd/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/ca.crt", perm: '0777', dest: /etc/etcd/ } # Should be symlink but its okay for now.
        - { file: "{{ playbook_dir }}/../../config/certs/generated/ca.key", perm: '0666', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/ca.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-apiserver.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-apiserver.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/service-account.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/service-account.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/apiserver-kubelet-client.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/apiserver-kubelet-client.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/etcd-server.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/etcd-server.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-scheduler.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-scheduler.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-controller-manager.key", perm: '0777', dest: /var/lib/kubernetes/pki/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-controller-manager.crt", perm: '0777', dest: /var/lib/kubernetes/pki/ }
    - name: Transfer KubeConfigs
      ansible.builtin.copy:
        src: "{{ item.file }}" 
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: "{{ item.perm }}"
      loop:
        # TODO: 0777 permission is not correct here
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-controller-manager.kubeconfig", perm: '0666', dest: /var/lib/kubernetes/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-scheduler.kubeconfig", perm: '0666', dest: /var/lib/kubernetes/ }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/admin.kubeconfig", perm: '0666', dest: /root/ }
    - name: create audit.log
      ansible.builtin.file:
        path: /var/log/audit.log
        owner: root
        group: root
        state: touch
    - name: give audit log 777
      ansible.builtin.file:
        path: /var/log/audit.log
        owner: root
        group: root
        mode: '0777'
    - name: modify kube-apiserver init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-apiserver
        regexp: '^command_args='
          # --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
          # --encryption-provider-config=/var/lib/kubernetes/encryption-config.yaml
        line: command_args="
          --advertise-address={{ iid.ip }}
          --allow-privileged=true
          --apiserver-count=2
          --audit-log-maxage=30
          --audit-log-maxbackup=3
          --audit-log-maxsize=100
          --audit-log-path=/var/log/audit.log
          --authorization-mode=Node,RBAC
          --bind-address=0.0.0.0
          --client-ca-file=/var/lib/kubernetes/pki/ca.crt
          --enable-admission-plugins=NodeRestriction,ServiceAccount
          --enable-bootstrap-token-auth=true
          --etcd-cafile=/var/lib/kubernetes/pki/ca.crt
          --etcd-certfile=/var/lib/kubernetes/pki/etcd-server.crt
          --etcd-keyfile=/var/lib/kubernetes/pki/etcd-server.key
          --etcd-servers={{ iid_control_plane.flags_etcd_servers }}
          --event-ttl=1h
          --kubelet-certificate-authority=/var/lib/kubernetes/pki/ca.crt
          --kubelet-client-certificate=/var/lib/kubernetes/pki/apiserver-kubelet-client.crt
          --kubelet-client-key=/var/lib/kubernetes/pki/apiserver-kubelet-client.key
          --runtime-config=api/all=true
          --service-account-key-file=/var/lib/kubernetes/pki/service-account.crt
          --service-account-signing-key-file=/var/lib/kubernetes/pki/service-account.key
          --service-account-issuer=https:{{ iid_control_plane.flags_account_issuer }}:6443
          --service-cluster-ip-range={{ iid_control_plane.flags_cluster_ip_range }}
          --service-node-port-range=30000-32767
          --tls-cert-file=/var/lib/kubernetes/pki/kube-apiserver.crt
          --tls-private-key-file=/var/lib/kubernetes/pki/kube-apiserver.key
          --v=2
          ${command_args}"
      tags:
        - modif_serv
    - name: Modify kube-controller-manager init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-controller-manager
        regexp: '^command_args='
        line: command_args="
          --allocate-node-cidrs=true
          --authentication-kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
          --authorization-kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
          --bind-address=127.0.0.1
          --client-ca-file=/var/lib/kubernetes/pki/ca.crt
          --cluster-cidr={{ iid_control_plane.flags_pod_cidr }}
          --cluster-name=kubernetes
          --cluster-signing-cert-file=/var/lib/kubernetes/pki/ca.crt
          --cluster-signing-key-file=/var/lib/kubernetes/pki/ca.key
          --controllers=*,bootstrapsigner,tokencleaner
          --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
          --leader-elect=true
          --node-cidr-mask-size=24
          --requestheader-client-ca-file=/var/lib/kubernetes/pki/ca.crt
          --root-ca-file=/var/lib/kubernetes/pki/ca.crt
          --service-account-private-key-file=/var/lib/kubernetes/pki/service-account.key
          --service-cluster-ip-range={{ iid_control_plane.flags_cluster_ip_range }}
          --use-service-account-credentials=true
          --v=2
          ${command_args}"
      tags:
        - modif_serv
    - name: Modify kube-scheduler init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-scheduler
        regexp: '^command_args='
        state: present
        line: command_args="
          --kubeconfig=/var/lib/kubernetes/kube-scheduler.kubeconfig
          --v=2
          ${command_args}"
      tags:
        - modif_serv
        - test123
    - name: start kubernetes server services
      ansible.builtin.service:
        name: "{{ item }}"
          #state: started
        state: restarted
      loop:
        - kube-controller-manager
        - kube-scheduler
      tags:
        - start_services
    - name: start api-server
      ansible.builtin.service:
        name: kube-apiserver
          #state: started
        state: restarted
      tags:
        - start_services
          #    - name: Create system:kube-apiserver-to-kubelet cluster role
          #      ansible.builtin.command:
          #        argv:
          #          - kubectl
          #          - apply
          #          - -f
          #          - kube-apiserver-to-kubelet.yaml
          #          - --kubeconfig
          #          - "{{ iid.name }}.kubeconfig"

