- hosts: kubernetes_control_plane

  tasks: 
    - name: modify /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        state: present
        line: "{{ item }}"
      loop:
        - "# Kubernetes The Hard Way"
        - "127.0.1.1 server.kubernetes.local server"
        - "192.168.1.20 server.kubernetes.local server"
        - "192.168.1.21 node-0.kubernetes.local node-0"
        - "192.168.1.22 node-1.kubernetes.local node-1"
    - name: Installing etcd
      community.general.portage:
        package: dev-db/etcd
        state: present
    - name: Etcd dir
      ansible.builtin.file:
        path: /var/lib/etcd
        state: directory
        mode: '700'      
    - name: Etcd certs
      ansible.builtin.copy:
        src: "{{ item.file }}" 
        dest: /etc/etcd/
        owner: root
        group: root
        mode: "{{ item.perm }}"
      loop:
        - { file: "{{ playbook_dir }}/../../config/certs/generated/ca.crt", perm: '0644' }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-api-server.key", perm: '0644' }
        - { file: "{{ playbook_dir }}/../../config/certs/generated/kube-api-server.crt", perm: '0600' }
    - name: modify default conf.yml
      ansible.builtin.lineinfile:
        path: /etc/etcd/etcd.conf.yml
        regexp: '^name: '
        line: "name: 'server'"
    - name: enable etcd service by default
      ansible.builtin.service:
        name: etcd
        enabled: yes
        runlevel: default
    - name: start etcd service
      ansible.builtin.service:
        name: etcd
        state: started
    - name: Installing kubernetes server packages
      community.general.portage:
        package: "{{ item }}"
        state: present
      loop:
        - app-containers/docker
        - app-containers/docker-cli
        - sys-cluster/kube-apiserver
        - sys-cluster/kube-controller-manager
        - sys-cluster/kube-scheduler
    - name: Kubernetes config dir
      ansible.builtin.file:
        path: /etc/kubernetes/config
        state: directory
        mode: '0731'      
    - name: Kubernetes lib dir
      ansible.builtin.file:
        path: /var/lib/kubernetes
        state: directory
        mode: '0731'      
    - name: Kubernetes Controller Apps certs
      copy:
        src: '{{item}}'
        dest: /var/lib/kubernetes/
        owner: root
        group: root
        mode: '0644'
      loop:
        - "{{ playbook_dir }}/../../config/certs/generated/ca.crt"
        - "{{ playbook_dir }}/../../config/certs/generated/ca.key"
        - "{{ playbook_dir }}/../../config/certs/generated/kube-api-server.key"
        - "{{ playbook_dir }}/../../config/certs/generated/kube-api-server.crt"
        - "{{ playbook_dir }}/../../config/certs/generated/service-accounts.key"
        - "{{ playbook_dir }}/../../config/certs/generated/service-accounts.crt"
        - "{{ playbook_dir }}/../../config/certs/generated/admin.kubeconfig"
        - "{{ playbook_dir }}/../../config/certs/generated/kube-controller-manager.kubeconfig"
        - "{{ playbook_dir }}/../../config/certs/generated/kube-scheduler.kubeconfig"
    - name: modify kube-apiserver init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-apiserver
        regexp: '^command_args="\${command_args}"'
        line: command_args="
          --allow-privileged=true
          --apiserver-count=1
          --audit-log-maxage=30
          --audit-log-maxbackup=3
          --audit-log-maxsize=100
          --audit-log-path=/var/log/audit.log
          --authorization-mode=Node,RBAC
          --bind-address=0.0.0.0
          --client-ca-file=/var/lib/kubernetes/ca.crt
          --enable-admission-plugins=NamespaceLifecycle,NodeRestriction,LimitRanger,ServiceAccount,DefaultStorageClass,ResourceQuota
          --etcd-servers=http://127.0.0.1:2379
          --event-ttl=1h
          --kubelet-certificate-authority=/var/lib/kubernetes/ca.crt
          --kubelet-client-certificate=/var/lib/kubernetes/kube-api-server.crt
          --kubelet-client-key=/var/lib/kubernetes/kube-api-server.key
          --runtime-config='api/all=true'
          --service-account-key-file=/var/lib/kubernetes/service-accounts.crt
          --service-account-signing-key-file=/var/lib/kubernetes/service-accounts.key
          --service-account-issuer=https://server.kubernetes.local:6443
          --service-cluster-ip-range=10.32.0.0/24
          --service-node-port-range=30000-32767
          --tls-cert-file=/var/lib/kubernetes/kube-api-server.crt
          --tls-private-key-file=/var/lib/kubernetes/kube-api-server.key
          --v=2
          ${command_args}"
      tags:
        - modif_serv
    - name: Modify kube-controller-manager init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-controller-manager
        regexp: '^command_args="\${command_args}"'
        line: command_args="
          --bind-address=0.0.0.0
          --cluster-cidr=10.200.0.0/16
          --cluster-name=kubernetes
          --cluster-signing-cert-file=/var/lib/kubernetes/ca.crt
          --cluster-signing-key-file=/var/lib/kubernetes/ca.key
          --kubeconfig=/var/lib/kubernetes/kube-controller-manager.kubeconfig
          --root-ca-file=/var/lib/kubernetes/ca.crt
          --service-account-private-key-file=/var/lib/kubernetes/service-accounts.key
          --service-cluster-ip-range=10.32.0.0/24
          --use-service-account-credentials=true
          --v=2
          ${command_args}"
      tags:
        - modif_serv
    - name: Modify kube-scheduler init file
      ansible.builtin.lineinfile:
        path: /etc/init.d/kube-scheduler
        regexp: '^command_args="\${command_args}"'
        state: present
        line: command_args="
          --config=/etc/kubernetes/config/kube-scheduler.yaml
          --v=2
          ${command_args}"
      tags:
        - modif_serv
        - test123
    - name: enable kubernetes server services
      ansible.builtin.service:
        name: "{{ item }}"
        enabled: yes
        runlevel: default
      loop:
        - docker
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
    - name: start kubernetes server services
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
      loop:
        - docker
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
    - name: Create system:kube-apiserver-to-kubelet cluster role
      ansible.builtin.command:
        argv:
          - kubectl
          - apply
          - -f
          - kube-apiserver-to-kubelet.yaml
          - --kubeconfig admin.kubeconfig

